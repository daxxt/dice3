# Python code @beducode
 

import base64, codecs
magic = ''
love = ''
god = ''
destiny = 'NtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpTSmpj0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtMJkmMGbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOjLKAmQDbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTyzVUWxL2uuozqyVTymVSElqJH6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpUWcoaDbpzAwo2kipvNeVUWwMz9hqTAioT9lVPftL2uuozAypzShMPNeVUWyplNeVUOlo2McqTAioT9lVPftpUI0nJtlVPftp3ElXUWioTIvMKDcVPftpzImVPftVvNvVPfAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPObnJcuqGVeVvfvX3A0pvulMKLbp3ElXTSgo3IhqPxcXFNeVUWyplNeVTWcpaHmVPftVvOPLJkuozAyVvNeVUWyplNeVPVtBvNvVPftp3ElXUWyqvumqUVbLzSfXFxcVPftpzImVPftnTydLKHlVPftVvODpz9znKDvVPftpzImVPftVvN6VPVtXlOmqUVbpzI2XUA0pvujpz9znKDcXFxtXlOlMKZtXlOeqJ5cozptXlNvVSEiqTSfVvNeVUWyplNeVPVtBvNvVPftp3ElXUqxXFxAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTIfp2H6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpUWcoaDbpzImVPftpUWiMzy0L29fo3VtXlOjqKEcnQVtXlOmqUVbpz9fMJWyqPxtXlOlMKZtXlNvVPVtXlObnJcuqGVeVvfvX3A0pvtAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpzI2XUA0pvuuoJ91oaDcXFxtXlOlMKZtXlOvnKW1ZlNeVPVtDzSfLJ5wMFVtXlOlMKZtXlNvVQbtVvNeVUA0pvulMKLbp3ElXTWuoPxcXFNeVUWyplNeVTucnzS1ZvNeVPVtHUWiMzy0VvNeVUWyplNeVPVtBvNvVPftp3ElXUWyqvumqUVbpUWiMzy0XFxcVPftpzImVPftn3IhnJ5aVPftVvOHo3EuoPVtXlOlMKZtXlNvVQbtVvNeVUA0pvu3MPxcQDbtVPNtVPNtVPNtVPNtVPNtVP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NeVUWyplNeVUA0pvulMKLbp3ElXTWuoPxcXFNeVUWyplNeVTucnzS1ZvNeVPVtHUWiMzy0VvNeVUWyplNeVPVtBvNvVPftp3ElXUWyqvumqUVbpUWiMzy0XFxcVPftpzImVPftn3IhnJ5aVPftVvOHo3EuoPVtXlOlMKZtXlNvVQbtVvNeVUA0pvu3MPxcQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOyoUAyBt0XVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUOlnJ50XUWyplNeVUOlo2McqTAioT9lVPftpUI0nJtlVPftp3ElXUWioTIvMKDcVPftpzImVPftVvNvVPftoJIlLJtlXlVgVvgmqUVbQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVUWyqvumqUVbLJ1iqJ50XFxcVPftpzImVPftLzylqGZtXlNvVRWuoTShL2HtBvNvVPftpzImVPftp3ElXUWyqvumqUVbLzSfXFxcVPftpzImVPftnTydLKHlVPftVvODpz9znKDvVPftpzImVPftVvN6VPVtXlOmqUVbpzI2XUA0pvujpz9znKDcXFxtXlOlMKZtXlOeqJ5cozptXlNvVSEiqTSfVvNeVUWyplNeVPVtBvNvVPftp3ElXUqxXFxAPvNtVPNtVPNtVPNtVPNtVPNtVPNtMJkmMGbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTyzVUWxL2uuozqyVTymVSElqJH6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtpUWcoaDbpzAwo2kipvNeVUWwMz9hqTAioT9lVPftL2uuozAypzShMPNeVUWyplNeVTkip2Iwo2kipvNeVUO1qTybZvNeVUA0pvulo2kyLzI0XFNeVUWyplNeVPVtVvNeQDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtoJIlLJtlXlVgVvgmqUVbpzI2XUA0pvuuoJ91oaDcXFxtXlOlMKZtXlOvnKW1ZlNeVPVtDzSfLJ5wMFN6VPVtXlOlMKZtXlOmqUVbpzI2XUA0pvuvLJjcXFxtXlOlMKZtXlObnJcuqGVtXlNvVSOlo2McqPVtXlOlMKZtXlNvVQbtVvNeVUA0pvulMKLbp3ElXUOlo2McqPxcXFNeVUWypl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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))